/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;


import com.sun.glass.events.KeyEvent;
import java.io.FileReader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Transport;
import javax.swing.*;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.*;
import javax.mail.internet.*;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ADMIN
 */
public class Payment extends javax.swing.JFrame {
    
    Connection conn = null;
    ResultSet rs= null;
    PreparedStatement pst=null;

    /**
     * Creates new form Payment
     */
    public Payment() {
        initComponents();
        conn=DBconnect.connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        TelNoTextField = new javax.swing.JTextField();
        TelNoLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        BillingInfoLabel = new javax.swing.JLabel();
        NameTextField = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        EmailTextField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel11.setText("Payment Summary");

        jButton4.setText("Generate Payment total");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jButton4)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        TelNoTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TelNoTextFieldMouseExited(evt);
            }
        });
        TelNoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TelNoTextFieldActionPerformed(evt);
            }
        });
        TelNoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TelNoTextFieldKeyTyped(evt);
            }
        });

        TelNoLabel.setText("Telephone number");

        NameLabel.setText("Name");

        BillingInfoLabel.setText("Customer Information");

        NameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NameTextFieldMouseExited(evt);
            }
        });
        NameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTextFieldActionPerformed(evt);
            }
        });
        NameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NameTextFieldKeyTyped(evt);
            }
        });

        EmailLabel.setText("Email");

        EmailTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EmailTextFieldMouseExited(evt);
            }
        });
        EmailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTextFieldActionPerformed(evt);
            }
        });

        jButton3.setText("Finalize Booking and send email");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Cancel and log off");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("Cancel and begin again");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(BillingInfoLabel))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(TelNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(TelNoLabel)
                                        .addComponent(EmailLabel)
                                        .addComponent(EmailTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton3))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(NameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NameLabel)
                                    .addComponent(jButton1)
                                    .addComponent(jButton5))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(BillingInfoLabel)
                .addGap(12, 12, 12)
                .addComponent(NameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TelNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TelNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(EmailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 271, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jButton2.setText("iReport");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Cus. Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(6, 6, 6)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TelNoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TelNoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TelNoTextFieldActionPerformed

    private void EmailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTextFieldActionPerformed

    private void NameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTextFieldActionPerformed

    private void NameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameTextFieldKeyTyped
       char c = evt.getKeyChar();
       if(!(Character.isAlphabetic(c)||c==KeyEvent.VK_BACKSPACE||c==KeyEvent.VK_DELETE||c==KeyEvent.VK_SPACE||c==KeyEvent.VK_PERIOD)){
          getToolkit().beep();
          evt.consume();
       }
    }//GEN-LAST:event_NameTextFieldKeyTyped

    private void TelNoTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TelNoTextFieldKeyTyped
   char t = evt.getKeyChar();
       if(!(Character.isDigit(t)||t==KeyEvent.VK_BACKSPACE||t==KeyEvent.VK_DELETE||t==KeyEvent.VK_SPACE)){
          getToolkit().beep();
          evt.consume();
       }
    }//GEN-LAST:event_TelNoTextFieldKeyTyped

    private void EmailTextFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmailTextFieldMouseExited
     

    }//GEN-LAST:event_EmailTextFieldMouseExited

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        
        if (Temp.Total == 0) {
            JOptionPane.showMessageDialog(null, "Generate Total first before finalizing");
        } else {
            
            Temp.CustomerName="Empty";
            Temp.telephone=0;
            Temp.email="Empty";
            if(!NameTextField.getText().equals("")){
            Temp.CustomerName = NameTextField.getText();
            }
            if(!TelNoTextField.getText().equals("")){
            String Telephonest = TelNoTextField.getText();
            int telephone = Integer.parseInt(Telephonest);
            Temp.telephone = telephone;
            }
            if(!EmailTextField.getText().equals("")){
            String email = EmailTextField.getText();
            Temp.email = email;
            }
            if (Temp.CustomerName == "Empty") {
                JOptionPane.showMessageDialog(null, "Enter a name");
            } else if (Temp.telephone == 0) {
                System.out.println(Temp.CustomerName);
                JOptionPane.showMessageDialog(null, "Enter a telephone number");
            } else if (Temp.email == "Empty") {
                JOptionPane.showMessageDialog(null, "Enter an email address");
            } else {
                conn = DBconnect.connect();
                
                try{
                    FileReader Fr= new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\Dates.txt");
                    Scanner Scss = new Scanner(Fr);

                    String next = Scss.nextLine();

                    StringTokenizer datetoken = new StringTokenizer(next);
                    String date;
                    date=datetoken.nextToken();
                    Temp.checkinstring=date;
                    date=datetoken.nextToken();
                    Temp.checkoutstring=date;
                    System.out.println(Temp.checkinstring);
                    System.out.println(Temp.checkoutstring);
                    Fr.close();
                }
                catch(Exception q){}
                
                PreparedStatement insertpst1=null;
                String Insert="INSERT INTO `hoteldb`.`resevationdetails` (`ReservationId`, `CustomerName`, `ContactNo`, `CheckInDate`, `CheckOutDate`, `Email`, `TotalAmount`) VALUES (NULL, '"+Temp.CustomerName+"', '"+Temp.telephone+"', '"+Temp.checkinstring+"', '"+Temp.checkoutstring+"', '"+Temp.email+"', "+Temp.Total+");";
                try{
                   insertpst1 = conn.prepareStatement(Insert);
                   insertpst1.execute(); 
                }
                catch(Exception o){
                    System.out.println(o);
                }
                
                PreparedStatement retrievepst1=null;
                ResultSet rsretrieve=null;
                //String Retrieve="Select ReservationId from resevationdetails where CustomerName='nil' AND ContactNo= 123 AND CheckInDate= '2016-04-11' AND CheckOutDate= '2016-04-16'";
                System.out.println(Temp.CustomerName+" "+Temp.telephone+" "+Temp.checkinstring);    
                String Retrieve = "SELECT ReservationId FROM resevationdetails WHERE CustomerName = '"+ Temp.CustomerName +"' AND ContactNo = '"+ Temp.telephone +"' AND CheckInDate = '" + Temp.checkinstring +"'";
                //String Retrieve="Select ReservationId from resevationdetails where CustomerName='"+Temp.CustomerName+"' AND ContactNo="+Temp.telephone+" AND CheckInDate="+Temp.checkoutstring+" AND CheckOutDate="+Temp.checkoutstring+"";
                try{
                retrievepst1=conn.prepareStatement(Retrieve);
                rsretrieve=retrievepst1.executeQuery();
                while(rsretrieve.next()){
                String CurrentResvID;
                try{
                CurrentResvID=rsretrieve.getString(1);
                Temp.ResvID=CurrentResvID;
                System.out.println(CurrentResvID);
                
                try {
                    String insroom;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardSingle.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            insroom = "INSERT INTO reservedroom (`ReservationId`, `RoomId`) VALUES ('"+CurrentResvID+"', '"+nextss+"')";
                            pst = conn.prepareStatement(insroom);
                            pst.execute();
                        } catch (Exception EX) {
                        }
                    }
                    frss.close();
                } catch (Exception EX) {
                }

                try {
                    String insroom;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardDouble.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            insroom = "INSERT INTO reservedroom (`ReservationId`, `RoomId`) VALUES ('"+CurrentResvID+"', '"+nextss+"')";
                            pst = conn.prepareStatement(insroom);
                            pst.execute();
                        } catch (Exception EX) {
                        }
                    }
                    frss.close();
                } catch (Exception EX) {
                }

                try {
                    String insroom;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeSingle.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            insroom = "INSERT INTO reservedroom (`ReservationId`, `RoomId`) VALUES ('"+CurrentResvID+"', '"+nextss+"')";
                            pst = conn.prepareStatement(insroom);
                            pst.execute();
                        } catch (Exception EX) {
                        }
                    }
                    frss.close();
                } catch (Exception EX) {
                }

                try {
                    String insroom;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeDouble.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            insroom = "INSERT INTO reservedroom (`ReservationId`, `RoomId`) VALUES ('"+CurrentResvID+"', '"+nextss+"')";
                            pst = conn.prepareStatement(insroom);
                            pst.execute();
                        } catch (Exception EX) {
                        }
                    }
                    frss.close();
                } catch (Exception EX) {
                }

                try {
                    String insroom;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteSingle.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            insroom = "INSERT INTO reservedroom (`ReservationId`, `RoomId`) VALUES ('"+CurrentResvID+"', '"+nextss+"')";
                            pst = conn.prepareStatement(insroom);
                            pst.execute();
                        } catch (Exception EX) {
                        }
                    }
                    frss.close();
                } catch (Exception EX) {
                }

                try {
                    String insroom;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteDouble.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            insroom = "INSERT INTO reservedroom (`ReservationId`, `RoomId`) VALUES ('"+CurrentResvID+"', '"+nextss+"')";
                            pst = conn.prepareStatement(insroom);
                            pst.execute();
                        } catch (Exception EX) {
                        }
                    }
                    frss.close();
                } catch (Exception EX) {
                }
                //break
                
                try {
                    String insSP;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\Services.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            insSP = "INSERT INTO reservedservice (`ReservationId`, `SPcode`) VALUES ('"+CurrentResvID+"', '"+nextss+"')";
                            pst = conn.prepareStatement(insSP);
                            pst.execute();
                        } catch (Exception EX) {
                        }
                    }
                    frss.close();
                } catch (Exception EX) {
                }

                try {
                    String insSP;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\packages.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            insSP = "INSERT INTO reservedservice (`ReservationId`, `SPcode`) VALUES ('"+CurrentResvID+"', '"+nextss+"')";
                            pst = conn.prepareStatement(insSP);
                            pst.execute();
                        } catch (Exception EX) {
                        }
                    }
                    frss.close();
                } catch (Exception EX) {
                }
//break

                        } catch (Exception w) {
                            System.out.println(w);
                        }

                    }
                } catch (Exception h) {
                    System.out.println(h);
                }
                try {
                    String update;

                    FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardSingle.txt");

                    Scanner Scss = new Scanner(frss);

                    String StanS = Scss.nextLine();

                    StringTokenizer roomSS = new StringTokenizer(StanS);
                    String nextss;
                    while (roomSS.hasMoreTokens()) {
                        nextss = roomSS.nextToken();

                        try {
                            update = "update HotelRooms set BookingStatus=0 where RoomId='" + nextss + "' ";
                            pst = conn.prepareStatement(update);
                            pst.execute();
                            ResultSet rscount = null;
                            String count;
                            //count = "Select count(*) from hotelrooms where RoomName='Standard' and Bed='Single' and bookingstatus=1'";
                            count ="SELECT COUNT(RoomId) From hotelrooms WHERE BookingStatus=1 AND RoomName= 'Standard' AND Bed= 'Single'";
                            pst = conn.prepareStatement(count);
                            rscount = pst.executeQuery();
                            
                            System.out.println(rscount);
                            
                            while (rscount.next()) {
                                String countstrin = rscount.getString(1);
                                System.out.println(countstrin);
                                String Updatecount = "Update roomtype set AvailableRooms='" + countstrin + "' where RoomName='Standard' and Bed='Single'";
                                pst = conn.prepareStatement(Updatecount);
                                pst.execute();
                            }

                        } catch (Exception EX) {System.out.println(EX);
                        }
                    }
                    frss.close();
                   
                } catch (Exception EX) {
                }

                try {
                    String update;

                    FileReader frsd = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardDouble.txt");

                    Scanner Scsd = new Scanner(frsd);

                    String StanD = Scsd.nextLine();

                    StringTokenizer roomSD = new StringTokenizer(StanD);
                    String nextsd;
                    while (roomSD.hasMoreTokens()) {
                        nextsd = roomSD.nextToken();

                        try {
                            update = "update HotelRooms set BookingStatus=0 where RoomId='" + nextsd + "' ";
                            pst = conn.prepareStatement(update);
                            pst.execute();
                            ResultSet rscount = null;
                            String count;
                            count ="SELECT COUNT(RoomId) From hotelrooms WHERE BookingStatus=1 AND RoomName= 'Standard' AND Bed= 'Double'";
                            pst = conn.prepareStatement(count);
                            rscount = pst.executeQuery();
                            while (rscount.next()) {
                                String countstrin = rscount.getString(1);
                                String Updatecount = "Update roomtype set AvailableRooms='" + countstrin + "' where RoomName='Standard' and Bed='Double'";
                                pst = conn.prepareStatement(Updatecount);
                                pst.execute();
                            }

                        } catch (Exception EX) {
                        }
                    }
                    frsd.close();
                } catch (Exception EX) {
                }

                try {
                    String update;

                    FileReader frds = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeSingle.txt");

                    Scanner Scds = new Scanner(frds);

                    String DelS = Scds.nextLine();

                    StringTokenizer roomDS = new StringTokenizer(DelS);
                    String nextds;
                    while (roomDS.hasMoreTokens()) {
                        nextds = roomDS.nextToken();

                        try {
                            update = "update HotelRooms set BookingStatus=0 where RoomId='" + nextds + "' ";
                            pst = conn.prepareStatement(update);
                            pst.execute();
                            ResultSet rscount = null;
                            String count;
                            count ="SELECT COUNT(RoomId) From hotelrooms WHERE BookingStatus=1 AND RoomName= 'Deluxe' AND Bed= 'Single'";
                            pst = conn.prepareStatement(count);
                            rscount = pst.executeQuery();
                            while (rscount.next()) {
                                String countstrin = rscount.getString(1);
                                String Updatecount = "Update roomtype set AvailableRooms='" + countstrin + "' where RoomName='Deluxe' and Bed='Single'";
                                pst = conn.prepareStatement(Updatecount);
                                pst.execute();
                            }

                        } catch (Exception EX) {
                        }
                    }
                    frds.close();
                } catch (Exception EX) {
                }

                try {
                    String update;

                    FileReader frdd = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeDouble.txt");

                    Scanner Scdd = new Scanner(frdd);

                    String DelD = Scdd.nextLine();

                    StringTokenizer roomDD = new StringTokenizer(DelD);
                    String nextdd;
                    while (roomDD.hasMoreTokens()) {
                        nextdd = roomDD.nextToken();

                        try {
                            update = "update HotelRooms set BookingStatus=0 where RoomId='" + nextdd + "' ";
                            pst = conn.prepareStatement(update);
                            pst.execute();
                            ResultSet rscount = null;
                            String count;
                            count ="SELECT COUNT(RoomId) From hotelrooms WHERE BookingStatus=1 AND RoomName= 'Deluxe' AND Bed= 'Double'";
                            pst = conn.prepareStatement(count);
                            rscount = pst.executeQuery();
                            while (rscount.next()) {
                                String countstrin = rscount.getString(1);
                                String Updatecount = "Update roomtype set AvailableRooms='" + countstrin + "' where RoomName='Deluxe' and Bed='Double'";
                                pst = conn.prepareStatement(Updatecount);
                                pst.execute();
                            }

                        } catch (Exception EX) {
                        }
                    }
                    frdd.close();
                } catch (Exception EX) {
                }

                try {
                    String update;

                    FileReader frsus = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteSingle.txt");

                    Scanner Scsus = new Scanner(frsus);

                    String SuiS = Scsus.nextLine();

                    StringTokenizer roomSuiS = new StringTokenizer(SuiS);
                    String nextsus;
                    while (roomSuiS.hasMoreTokens()) {
                        nextsus = roomSuiS.nextToken();

                        try {
                            update = "update HotelRooms set BookingStatus=0 where RoomId='" + nextsus + "' ";
                            pst = conn.prepareStatement(update);
                            pst.execute();
                            ResultSet rscount = null;
                            String count;
                            count ="SELECT COUNT(RoomId) From hotelrooms WHERE BookingStatus=1 AND RoomName= 'Suite' AND Bed= 'Single'";
                            pst = conn.prepareStatement(count);
                            rscount = pst.executeQuery();
                            while (rscount.next()) {
                                String countstrin = rscount.getString(1);
                                String Updatecount = "Update roomtype set AvailableRooms='" + countstrin + "' where RoomName='Suite' and Bed='Single'";
                                pst = conn.prepareStatement(Updatecount);
                                pst.execute();
                            }

                        } catch (Exception EX) {
                        }
                    }
                    frsus.close();
                } catch (Exception EX) {
                }

                try {
                    String update;

                    FileReader frsud = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteDouble.txt");

                    Scanner Scsud = new Scanner(frsud);

                    String SuiD = Scsud.nextLine();

                    StringTokenizer roomSuiD = new StringTokenizer(SuiD);
                    String nextsud;
                    while (roomSuiD.hasMoreTokens()) {
                        nextsud = roomSuiD.nextToken();

                        try {
                            update = "update HotelRooms set BookingStatus=0 where RoomId='" + nextsud + "' ";
                            pst = conn.prepareStatement(update);
                            pst.execute();
                            ResultSet rscount = null;
                            String count;
                            count ="SELECT COUNT(RoomId) From hotelrooms WHERE BookingStatus=1 AND RoomName= 'Suite' AND Bed= 'Double'";
                            pst = conn.prepareStatement(count);
                            rscount = pst.executeQuery();
                            while (rscount.next()) {
                                String countstrin = rscount.getString(1);
                                String Updatecount = "Update roomtype set AvailableRooms='" + countstrin + "' where RoomName='Suite' and Bed='Double'";
                                pst = conn.prepareStatement(Updatecount);
                                pst.execute();
                            }

                        } catch (Exception EX) {
                        }
                    }
                    frsud.close();
                } catch (Exception EX) {
                }
                
                String SS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardSingle.txt";
                Path SSpath= Paths.get(SS);
                try{
                    Files.delete(SSpath);
                }
                catch(Exception j){
                    System.out.println(j);    
                }
                String SD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardDouble.txt";
                Path SDpath= Paths.get(SD);
                try{
                    Files.delete(SDpath);
                }
                catch(Exception j){
                    
                }
                
                String DS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DoubleSingle.txt";
                Path DSpath= Paths.get(DS);
                try{
                    Files.delete(DSpath);
                }
                catch(Exception j){
                    
                }
                
                String DD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeDouble.txt";
                Path DDpath= Paths.get(DD);
                try{
                    Files.delete(DDpath);
                }
                catch(Exception j){
                    
                }
                
                String SuS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteSingle.txt";
                Path SuSpath= Paths.get(SuS);
                try{
                    Files.delete(SuSpath);
                }
                catch(Exception j){
                    
                }
                
                String SuD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteDouble.txt";
                Path SuDpath= Paths.get(SuD);
                try{
                    Files.delete(SuDpath);
                }
                catch(Exception j){
                    
                }
                
                String Ser= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\Services.txt";
                Path Serpath= Paths.get(Ser);
                try{
                    Files.delete(Serpath);
                }
                catch(Exception j){
                    
                }
                
                String Pack= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\packages.txt";
                Path Packpath= Paths.get(Pack);
                try{
                    Files.delete(Packpath);
                }
                catch(Exception j){
                    
                }
                
                String Date= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\dates.txt";
                Path Datepath= Paths.get(Date);
                try{
                    Files.delete(Datepath);
                }
                catch(Exception j){
                    
                }

                final String username = "sliithotel@gmail.com";
                final String password = "3314338sliit";

                Properties props = new Properties();
                props.put("mail.smtp.starttls.enable", "true");
                props.put("mail.smtp.auth", "true");
                props.put("mail.smtp.host", "smtp.gmail.com");
                props.put("mail.smtp.port", "587");

                Session session = Session.getInstance(props,
                        new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(username, password);
                    }
                });

                try {

                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("sliithotel@gmail.com"));
                    message.setRecipients(Message.RecipientType.TO,
                            InternetAddress.parse(Temp.email));
                    message.setSubject("Sliit Hotel Reservation");
                    message.setText("Dear " + Temp.CustomerName + ", \n Your room(s) were booked successfully. \n Your Reservation Code is "
                            +Temp.ResvID+" \n Your Total due amount is $"+Temp.Total);

                    Transport.send(message);

                    JOptionPane.showMessageDialog(null, "Email Sent");
                    System.out.println(Temp.CustomerName);

                } catch (MessagingException e) {
                    JOptionPane.showMessageDialog(null, e);
                    throw new RuntimeException(e);
                }
            }
        }
        Date1 D3 = new Date1();
           D3.setVisible(true);
            setVisible(false);
            dispose();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void NameTextFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameTextFieldMouseExited
    
    }//GEN-LAST:event_NameTextFieldMouseExited

    private void TelNoTextFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelNoTextFieldMouseExited
    
    
    }//GEN-LAST:event_TelNoTextFieldMouseExited

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    
        Temp.Total=0;    
        
        try {

            FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardSingle.txt");

            Scanner Scss = new Scanner(frss);

            String StanS = Scss.nextLine();
            
            StringTokenizer roomSS = new StringTokenizer(StanS);
            String nextss;
            while (roomSS.hasMoreTokens()) {
                nextss = roomSS.nextToken();
                
                String sql1 = "SELECT RoomOnlyPrice from RoomType where RoomName= 'Standard' and Bed='Single' ";
                pst = conn.prepareStatement(sql1);
                rs = pst.executeQuery();
                
                
                while(rs.next()){
                Double num1 = rs.getDouble("RoomOnlyPrice");
                System.out.println("this is " + num1);
                Temp.Total = Temp.Total + num1;
                
                }    
            }
            frss.close();
        } catch (Exception EX) {
            System.out.println(EX);
        }

        try {
            
            FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardDouble.txt");

            Scanner Scss = new Scanner(frss);

            String StanS = Scss.nextLine();

            StringTokenizer roomSS = new StringTokenizer(StanS);
            String nextss;
            while (roomSS.hasMoreTokens()) {
                nextss = roomSS.nextToken();
               String sql1="SELECT RoomOnlyPrice from RoomType where RoomName= 'Standard' and Bed='Double' ";
               pst=conn.prepareStatement(sql1);
               rs=pst.executeQuery();
               
            while(rs.next()){
           
                    Double num1=rs.getDouble("RoomOnlyPrice");
                    Temp.Total=Temp.Total+num1;                                                    
               
                }
            }
            frss.close();
        } catch (Exception EX) {}

        try {
            
            FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeSingle.txt");

            Scanner Scss = new Scanner(frss);

            String StanS = Scss.nextLine();

            StringTokenizer roomSS = new StringTokenizer(StanS);
            String nextss;
            while (roomSS.hasMoreTokens()) {
                nextss = roomSS.nextToken();
               String sql1="SELECT RoomOnlyPrice from RoomType where RoomName= 'Deluxe' and Bed='Single' ";
               pst=conn.prepareStatement(sql1);
               rs=pst.executeQuery();
               
            while(rs.next()){
           
                    Double num1=rs.getDouble("RoomOnlyPrice");
                    Temp.Total=Temp.Total+num1;                                                    
               
                }
            }
            frss.close();
        } catch (Exception EX){
        }

        try {
            
            FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeDouble.txt");

            Scanner Scss = new Scanner(frss);

            String StanS = Scss.nextLine();

            StringTokenizer roomSS = new StringTokenizer(StanS);
            String nextss;
            while (roomSS.hasMoreTokens()) {
                nextss = roomSS.nextToken();
               String sql1="SELECT RoomOnlyPrice from RoomType where RoomName= 'Deluxe' and Bed='Double' ";
               pst=conn.prepareStatement(sql1);
               rs=pst.executeQuery();
               
            while(rs.next()){
           
                    Double num1=rs.getDouble("RoomOnlyPrice");
                    Temp.Total=Temp.Total+num1;                                                    
               
                }
            }
            frss.close();
        } catch (Exception EX) {}

        try {
            
            FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteSingle.txt");

            Scanner Scss = new Scanner(frss);

            String StanS = Scss.nextLine();

            StringTokenizer roomSS = new StringTokenizer(StanS);
            String nextss;
            while (roomSS.hasMoreTokens()) {
                nextss = roomSS.nextToken();
               String sql1="SELECT RoomOnlyPrice from RoomType where RoomName= 'Suite' and Bed='Single' ";
               pst=conn.prepareStatement(sql1);
               rs=pst.executeQuery();
               
            while(rs.next()){
           
                    Double num1=rs.getDouble("RoomOnlyPrice");
                    Temp.Total=Temp.Total+num1;                                                    
             
                }
            }
            frss.close();
        } catch (Exception EX) {}

        try {
            
            FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteDouble.txt");

            Scanner Scss = new Scanner(frss);

            String StanS = Scss.nextLine();

            StringTokenizer roomSS = new StringTokenizer(StanS);
            String nextss;
            while (roomSS.hasMoreTokens()) {
                nextss = roomSS.nextToken();
               String sql1="SELECT RoomOnlyPrice from RoomType where RoomName= 'Suite' and Bed='Double' ";
               pst=conn.prepareStatement(sql1);
               rs=pst.executeQuery();
               
            while(rs.next()){
           
                    Double num1=rs.getDouble("RoomOnlyPrice");
                    Temp.Total=Temp.Total+num1;                                                    
              
                }
            }
            frss.close();
        } catch (Exception EX) {}
        
        try {

            FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\Services.txt");

            Scanner Scss = new Scanner(frss);

            String StanS = Scss.nextLine();
            
            StringTokenizer roomSS = new StringTokenizer(StanS);
            String nextss;
            while (roomSS.hasMoreTokens()) {
                nextss = roomSS.nextToken();
                
                String sql1 = "SELECT SPprice from servicesandpakages where SPcode= '"+nextss+"' ";
                pst = conn.prepareStatement(sql1);
                rs = pst.executeQuery();
                
                
                while(rs.next()){
                Double num1 = rs.getDouble("SPprice");
                System.out.println("this is " + num1);
                Temp.Total = Temp.Total + num1;
                
                }    
            }
            frss.close();
        } catch (Exception EX) {
            System.out.println(EX);
        }
        
                try {

            FileReader frss = new FileReader("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\packages.txt");

            Scanner Scss = new Scanner(frss);

            String StanS = Scss.nextLine();
            
            StringTokenizer roomSS = new StringTokenizer(StanS);
            String nextss;
            while (roomSS.hasMoreTokens()) {
                nextss = roomSS.nextToken();
                
                String sql1 = "SELECT SPprice from servicesandpakages where SPcode= '"+nextss+"' ";
                pst = conn.prepareStatement(sql1);
                rs = pst.executeQuery();
                
                
                while(rs.next()){
                Double num1 = rs.getDouble("SPprice");
                System.out.println("this is " + num1);
                Temp.Total = Temp.Total + num1;
                
                }    
            }
            frss.close();
        } catch (Exception EX) {
            System.out.println(EX);
        }
        
        JOptionPane.showMessageDialog(null, "Total: $"+Temp.Total);
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String SS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardSingle.txt";
                Path SSpath= Paths.get(SS);
                try{
                    Files.delete(SSpath);
                }
                catch(Exception j){
                    System.out.println(j);    
                }
                String SD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardDouble.txt";
                Path SDpath= Paths.get(SD);
                try{
                    Files.delete(SDpath);
                }
                catch(Exception j){
                    
                }
                
                String DS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DoubleSingle.txt";
                Path DSpath= Paths.get(DS);
                try{
                    Files.delete(DSpath);
                }
                catch(Exception j){
                    
                }
                
                String DD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeDouble.txt";
                Path DDpath= Paths.get(DD);
                try{
                    Files.delete(DDpath);
                }
                catch(Exception j){
                    
                }
                
                String SuS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteSingle.txt";
                Path SuSpath= Paths.get(SuS);
                try{
                    Files.delete(SuSpath);
                }
                catch(Exception j){
                    
                }
                
                String SuD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteDouble.txt";
                Path SuDpath= Paths.get(SuD);
                try{
                    Files.delete(SuDpath);
                }
                catch(Exception j){
                    
                }
                
                String Ser= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\Services.txt";
                Path Serpath= Paths.get(Ser);
                try{
                    Files.delete(Serpath);
                }
                catch(Exception j){
                    
                }
                
                String Pack= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\packages.txt";
                Path Packpath= Paths.get(Pack);
                try{
                    Files.delete(Packpath);
                }
                catch(Exception j){
                    
                }
                
                String Date= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\dates.txt";
                Path Datepath= Paths.get(Date);
                try{
                    Files.delete(Datepath);
                }
                catch(Exception j){
                    
                }
                
                login l1 = new login();
                l1.setVisible(true);
                setVisible(false);
                dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      String SS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardSingle.txt";
                Path SSpath= Paths.get(SS);
                try{
                    Files.delete(SSpath);
                }
                catch(Exception j){
                    System.out.println(j);    
                }
                String SD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardDouble.txt";
                Path SDpath= Paths.get(SD);
                try{
                    Files.delete(SDpath);
                }
                catch(Exception j){
                    
                }
                
                String DS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeSingle.txt";
                Path DSpath= Paths.get(DS);
                try{
                    Files.delete(DSpath);
                }
                catch(Exception j){
                    
                }
                
                String DD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeDouble.txt";
                Path DDpath= Paths.get(DD);
                try{
                    Files.delete(DDpath);
                }
                catch(Exception j){
                    
                }
                
                String SuS= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteSingle.txt";
                Path SuSpath= Paths.get(SuS);
                try{
                    Files.delete(SuSpath);
                }
                catch(Exception j){
                    
                }
                
                String SuD= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteDouble.txt";
                Path SuDpath= Paths.get(SuD);
                try{
                    Files.delete(SuDpath);
                }
                catch(Exception j){
                    
                }
                
                String Ser= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\Services.txt";
                Path Serpath= Paths.get(Ser);
                try{
                    Files.delete(Serpath);
                }
                catch(Exception j){
                    
                }
                
                String Pack= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\packages.txt";
                Path Packpath= Paths.get(Pack);
                try{
                    Files.delete(Packpath);
                }
                catch(Exception j){
                    
                }
                
                String Date= "C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\dates.txt";
                Path Datepath= Paths.get(Date);
                try{
                    Files.delete(Datepath);
                }
                catch(Exception j){
                    
                }
                
                Date1 d5 = new Date1();
                d5.setVisible(true);
                setVisible(false);
                dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String reportcustomer= jTextField1.getText();

        String reportsql= "Select ReservationId, CustomerName, TotalAmount from resevationdetails where `CustomerName`='"+reportcustomer+"'";
        try {
            JasperDesign jd = JRXmlLoader.load("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\Payment.jrxml");
            JRDesignQuery newQuery= new JRDesignQuery();
            newQuery.setText(reportsql);
            jd.setQuery(newQuery);
            JasperReport jr= JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
            JasperViewer.viewReport(jp,false);
        } catch (JRException ex) {
            Logger.getLogger(Packages.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BillingInfoLabel;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JLabel TelNoLabel;
    private javax.swing.JTextField TelNoTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
