/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import com.sun.glass.events.KeyEvent;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Pooja
 */

public class Room extends javax.swing.JFrame {  
    
   Connection con=null;
   
   PreparedStatement pst1=null;
   ResultSet rs=null;
   
   //PreparedStatement pst2=null;
   
   PreparedStatement pstSS=null;
   ResultSet rsSS=null;
    
    public Room() {
        initComponents();
        
    con=DBconnect.connect(); 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        StdSingleRadio = new javax.swing.JRadioButton();
        StdSingle = new javax.swing.JTextField();
        StdDoubleRadio = new javax.swing.JRadioButton();
        StdDouble = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        DelSingleRadio = new javax.swing.JRadioButton();
        DelDoubleRadio = new javax.swing.JRadioButton();
        DelSingle = new javax.swing.JTextField();
        DelDouble = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        SuiSingleRadio = new javax.swing.JRadioButton();
        SuiDoubleRadio = new javax.swing.JRadioButton();
        SuiSingle = new javax.swing.JTextField();
        SuiDouble = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        next = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        ireport = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Room Reservation");

        jLabel1.setText("Standard");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/Standard.jpg"))); // NOI18N

        jLabel3.setText("Bed Type");

        jLabel4.setText("Room only");

        jLabel6.setText("No of Rooms");

        jLabel7.setText("Single");

        jLabel8.setText("Double");

        StdSingleRadio.setText("USD 122");
        StdSingleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StdSingleRadioActionPerformed(evt);
            }
        });

        StdSingle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                StdSingleMouseExited(evt);
            }
        });
        StdSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StdSingleActionPerformed(evt);
            }
        });
        StdSingle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                StdSingleKeyTyped(evt);
            }
        });

        StdDoubleRadio.setText("USD 134");
        StdDoubleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StdDoubleRadioActionPerformed(evt);
            }
        });

        StdDouble.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                StdDoubleMouseExited(evt);
            }
        });
        StdDouble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StdDoubleActionPerformed(evt);
            }
        });
        StdDouble.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                StdDoubleKeyTyped(evt);
            }
        });

        jLabel9.setText("Deluxe");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/Deluxe.jpg"))); // NOI18N

        jLabel11.setText("Single");

        jLabel12.setText("Double");

        DelSingleRadio.setText("USD 200");
        DelSingleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelSingleRadioActionPerformed(evt);
            }
        });

        DelDoubleRadio.setText("USD 230");
        DelDoubleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelDoubleRadioActionPerformed(evt);
            }
        });

        DelSingle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DelSingleMouseExited(evt);
            }
        });
        DelSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelSingleActionPerformed(evt);
            }
        });
        DelSingle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DelSingleKeyTyped(evt);
            }
        });

        DelDouble.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DelDoubleMouseExited(evt);
            }
        });
        DelDouble.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DelDoubleKeyTyped(evt);
            }
        });

        jLabel13.setText("Suite");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/Suite.jpg"))); // NOI18N

        jLabel15.setText("Single");

        jLabel16.setText("Double");

        SuiSingleRadio.setText("USD 350");
        SuiSingleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuiSingleRadioActionPerformed(evt);
            }
        });

        SuiDoubleRadio.setText("USD 365");
        SuiDoubleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuiDoubleRadioActionPerformed(evt);
            }
        });

        SuiSingle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SuiSingleMouseExited(evt);
            }
        });
        SuiSingle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SuiSingleKeyTyped(evt);
            }
        });

        SuiDouble.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SuiDoubleMouseExited(evt);
            }
        });
        SuiDouble.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SuiDoubleKeyTyped(evt);
            }
        });

        jButton1.setText("Room info");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Room info");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Room info");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jLabel5.setText("Room Name");

        jButton4.setText("IReport");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel15)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(jLabel3)
                                                                    .addComponent(jLabel7))
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addGap(34, 34, 34)
                                                                        .addComponent(jLabel4))
                                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addGap(27, 27, 27)
                                                                        .addComponent(StdSingleRadio))
                                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addGap(27, 27, 27)
                                                                        .addComponent(StdDoubleRadio))
                                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addGap(27, 27, 27)
                                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                            .addComponent(DelDoubleRadio)
                                                                            .addComponent(DelSingleRadio)
                                                                            .addComponent(SuiSingleRadio)
                                                                            .addComponent(SuiDoubleRadio)))))
                                                            .addComponent(jLabel16)
                                                            .addComponent(jLabel8))
                                                        .addGap(44, 44, 44)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel6)
                                                            .addComponent(StdSingle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(StdDouble, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(DelSingle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(DelDouble, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(SuiSingle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(SuiDouble, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jButton3)
                                                    .addComponent(jButton2)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel13))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jButton1))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel1)))
                        .addGap(0, 56, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ireport, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(StdSingleRadio)
                            .addComponent(StdSingle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(StdDoubleRadio)
                            .addComponent(StdDouble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(DelSingleRadio)
                            .addComponent(DelSingle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(DelDoubleRadio)
                            .addComponent(DelDouble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(SuiSingleRadio)
                                    .addComponent(SuiSingle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(SuiDoubleRadio)
                                    .addComponent(SuiDouble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(ireport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
    
        if (StdSingleRadio.isSelected()){
        
        String StdS=StdSingle.getText();   
        int i=Integer.parseInt(StdS);
        
        
        String RoomId;    
                 
            try{
                FileWriter fr= new FileWriter("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardSingle.txt");
                PrintWriter pw= new PrintWriter(fr);
                
                
                String sql="SELECT RoomId from HotelRooms where RoomName= 'Standard' and Bed='Single' and BookingStatus=1 ";              
                pst1 = con.prepareStatement(sql);
                rs = pst1.executeQuery();                            
                
                for (int j = 0; j < i; j++) {
                    rs.next();
                    RoomId = rs.getString("RoomId");
                    pw.print(RoomId+" ");
                
                }
                pw.close();
                
            }
            catch(Exception e){
                System.out.println(e);
     
            }  
       
        }
        
        
        if (StdDoubleRadio.isSelected()){
        
        String StdD=StdDouble.getText();   
        int i=Integer.parseInt(StdD);
    
        String RoomId;    
                 
            try{
                FileWriter fr= new FileWriter("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\StandardDouble.txt");
                PrintWriter pw= new PrintWriter(fr);
                
                
                String sql="SELECT RoomId from HotelRooms where RoomName= 'Standard' and Bed='Double' and BookingStatus=1 ";              
                pst1 = con.prepareStatement(sql);
                rs = pst1.executeQuery();                            
                
                for (int j = 0; j < i; j++) {
                    rs.next();
                    RoomId = rs.getString("RoomId");
                    pw.print(RoomId+" ");
                
                }
                pw.close();
                
            }
            catch(Exception e){
                System.out.println(e);
     
            }  
       
        }
        
        
        if (DelSingleRadio.isSelected()){
        
        String StdS=DelSingle.getText();   
        int i=Integer.parseInt(StdS);
            
        String RoomId;    
                 
            try{
                FileWriter fr= new FileWriter("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeSingle.txt");
                PrintWriter pw= new PrintWriter(fr);
                
                
                String sql="SELECT RoomId from HotelRooms where RoomName= 'Deluxe' and Bed='Single' and BookingStatus=1 ";              
                pst1 = con.prepareStatement(sql);
                rs = pst1.executeQuery();                            
                
                for (int j = 0; j < i; j++) {
                    rs.next();
                    RoomId = rs.getString("RoomId");
                    pw.print(RoomId+" ");
                
                }
                pw.close();
                
            }
            catch(Exception e){
                System.out.println(e);
     
            }  
       
        }
        
        
        if (DelDoubleRadio.isSelected()){
        
        String DelD=DelDouble.getText();   
        int i=Integer.parseInt(DelD);
            
        String RoomId;    
                 
            try{
                FileWriter fr= new FileWriter("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\DeluxeDouble.txt");
                PrintWriter pw= new PrintWriter(fr);
                
                
                String sql="SELECT RoomId from HotelRooms where RoomName= 'Deluxe' and Bed='Double' and BookingStatus=1 ";              
                pst1 = con.prepareStatement(sql);
                rs = pst1.executeQuery();                            
                
                for (int j = 0; j < i; j++) {
                    rs.next();
                    RoomId = rs.getString("RoomId");
                    pw.print(RoomId+" ");
                
                }
                pw.close();
            
            }
            catch(Exception e){
                System.out.println(e);
     
            }  
       
        }
        
        
        if (SuiSingleRadio.isSelected()){
        
        String SuiS=SuiSingle.getText();   
        int i=Integer.parseInt(SuiS);
            
        String RoomId;    
                 
            try{
                FileWriter fr= new FileWriter("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteSingle.txt");
                PrintWriter pw= new PrintWriter(fr);
                
                
                String sql="SELECT RoomId from HotelRooms where RoomName= 'Suite' and Bed='Single' and BookingStatus=1 ";              
                pst1 = con.prepareStatement(sql);
                rs = pst1.executeQuery();                            
                
                for (int j = 0; j < i; j++) {
                    rs.next();
                    RoomId = rs.getString("RoomId");
                    pw.print(RoomId+" ");
                
                }
                pw.close();
            
            }
            catch(Exception e){
                System.out.println(e);
     
            }  
       
        }
        
        
        if (SuiDoubleRadio.isSelected()){
       
        String SuiD=SuiDouble.getText();   
        int i=Integer.parseInt(SuiD);
            
        String RoomId;    
                 
            try{
                FileWriter fr= new FileWriter("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\src\\hotel\\Variables\\SuiteDouble.txt");
                PrintWriter pw= new PrintWriter(fr);
                
              
                String sql="SELECT RoomId from HotelRooms where RoomName= 'Suite' and Bed='Double' and BookingStatus=1 ";              
                pst1 = con.prepareStatement(sql);
                rs = pst1.executeQuery();                            
                
                for (int j = 0; j < i; j++) {
                    rs.next();
                    RoomId = rs.getString("RoomId");
                    pw.print(RoomId+" ");
                
                }
                pw.close();
            
            }
            catch(Exception e){
                System.out.println(e);
     
            }  
       
        }
        
if(!StdSingle.getText().equals("") || !StdDouble.getText().equals("") || !DelSingle.getText().equals("") 
        || !DelDouble.getText().equals("") || !SuiSingle.getText().equals("") || !SuiDouble.getText().equals("")){
             
             services s = new services();
             s.setVisible(true);
             setVisible(false);
             dispose();
     }

    }//GEN-LAST:event_nextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
       Standard r1=new Standard(this,true);
        
        r1.setVisible(true); 
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        Deluxe r1=new Deluxe(this,true);
        
        r1.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                
        Suite r1=new Suite(this,true);
        
        r1.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void StdSingleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StdSingleRadioActionPerformed
        
        
    }//GEN-LAST:event_StdSingleRadioActionPerformed

    private void StdDoubleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StdDoubleRadioActionPerformed
        
       
    }//GEN-LAST:event_StdDoubleRadioActionPerformed

    private void DelSingleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelSingleRadioActionPerformed
       
       
    }//GEN-LAST:event_DelSingleRadioActionPerformed

    private void DelDoubleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelDoubleRadioActionPerformed
        
    }//GEN-LAST:event_DelDoubleRadioActionPerformed

    private void SuiSingleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuiSingleRadioActionPerformed
       
    }//GEN-LAST:event_SuiSingleRadioActionPerformed

    private void SuiDoubleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuiDoubleRadioActionPerformed
        
    }//GEN-LAST:event_SuiDoubleRadioActionPerformed

    private void StdSingleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StdSingleMouseExited
        
        try{
            
        String roomEntered=StdSingle.getText();
                
        if(roomEntered!=null){
        
           int StdSi=Integer.parseInt(roomEntered);
                    
               String sql1="SELECT AvailableRooms from RoomType where RoomName= 'Standard' and Bed='Single' ";
               pstSS=con.prepareStatement(sql1);
               rsSS=pstSS.executeQuery();
           
               while(rsSS.next()){
           
                    int num1=rsSS.getInt("AvailableRooms");
                                                                         
                    if(num1<StdSi){
                
                        JOptionPane.showMessageDialog(null,"Entered number of Standard Single rooms is greater than number of available rooms");
                        StdSingle.setText(null);
                    }
               
                }
           
        }
        }
        catch(NumberFormatException | SQLException SS){
        }
    }//GEN-LAST:event_StdSingleMouseExited

    private void StdDoubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StdDoubleActionPerformed
        
    }//GEN-LAST:event_StdDoubleActionPerformed

    private void DelSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelSingleActionPerformed
       
    }//GEN-LAST:event_DelSingleActionPerformed

    private void StdDoubleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StdDoubleMouseExited
        
        
        try{
            
        String roomEntered=StdDouble.getText();
                
        if(roomEntered!=null){
        
           int StdDo=Integer.parseInt(roomEntered);
                    
               String sql1="SELECT AvailableRooms from RoomType where RoomName= 'Standard' and Bed='Double' ";
               pstSS=con.prepareStatement(sql1);
               rsSS=pstSS.executeQuery();
           
               while(rsSS.next()){
           
                    int num1=rsSS.getInt("AvailableRooms");
                                                                         
                    if(num1<StdDo){
                
                        JOptionPane.showMessageDialog(null,"Entered number of Standard Double rooms is greater than number of available rooms");
                        StdDouble.setText(null);
                    }
               
                }
           
        }
        }
        catch(NumberFormatException | SQLException SD){
        }
    }//GEN-LAST:event_StdDoubleMouseExited

    private void DelSingleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DelSingleMouseExited
        
        try{
            
        String roomEntered=DelSingle.getText();
                
        if(roomEntered!=null){
        
           int DelSi=Integer.parseInt(roomEntered);
                    
               String sql1="SELECT AvailableRooms from RoomType where RoomName= 'Deluxe' and Bed='Single' ";
               pstSS=con.prepareStatement(sql1);
               rsSS=pstSS.executeQuery();
           
               while(rsSS.next()){
           
                    int num1=rsSS.getInt("AvailableRooms");
                                                                         
                    if(num1<DelSi){
                
                        JOptionPane.showMessageDialog(null,"Entered number of Deluxe Single rooms is greater than number of available rooms");
                        DelSingle.setText(null);
                    }
               
                }
           
        }
        }
        catch(NumberFormatException | SQLException DS){
        }
    }//GEN-LAST:event_DelSingleMouseExited

    private void DelDoubleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DelDoubleMouseExited
        
        try{
            
        String roomEntered=DelDouble.getText();
                
        if(roomEntered!=null){
        
           int DelDo=Integer.parseInt(roomEntered);
                    
               String sql1="SELECT AvailableRooms from RoomType where RoomName= 'Deluxe' and Bed='Double' ";
               pstSS=con.prepareStatement(sql1);
               rsSS=pstSS.executeQuery();
           
               while(rsSS.next()){
           
                    int num1=rsSS.getInt("AvailableRooms");
                                                                         
                    if(num1<DelDo){
                
                        JOptionPane.showMessageDialog(null,"Entered number of Deluxe Double rooms is greater than number of available rooms");
                        DelDouble.setText(null);
                    }
               
                }
           
        }
        }
        catch(NumberFormatException | SQLException DD){
        }
    }//GEN-LAST:event_DelDoubleMouseExited

    private void SuiSingleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuiSingleMouseExited
        
        try{
            
        String roomEntered=SuiSingle.getText();
                
        if(roomEntered!=null){
        
           int SuiSi=Integer.parseInt(roomEntered);
                    
               String sql1="SELECT AvailableRooms from RoomType where RoomName= 'Suite' and Bed='Single' ";
               pstSS=con.prepareStatement(sql1);
               rsSS=pstSS.executeQuery();
           
               while(rsSS.next()){
           
                    int num1=rsSS.getInt("AvailableRooms");
                                                                         
                    if(num1<SuiSi){
                
                        JOptionPane.showMessageDialog(null,"Entered number of Suite Single rooms is greater than number of available rooms");
                        SuiSingle.setText(null);
                    }
               
                }
           
        }
        }
        catch(NumberFormatException | SQLException SuS){
        }
    }//GEN-LAST:event_SuiSingleMouseExited

    private void SuiDoubleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuiDoubleMouseExited
        
        try{
            
        String roomEntered=SuiDouble.getText();
                
        if(roomEntered!=null){
        
           int SuiDo=Integer.parseInt(roomEntered);
                    
               String sql1="SELECT AvailableRooms from RoomType where RoomName= 'Suite' and Bed='Double' ";
               pstSS=con.prepareStatement(sql1);
               rsSS=pstSS.executeQuery();
           
               while(rsSS.next()){
           
                    int num1=rsSS.getInt("AvailableRooms");
                                                                         
                    if(num1<SuiDo){
                
                        JOptionPane.showMessageDialog(null,"Entered number of Suite Double rooms is greater than number of available rooms");
                        SuiDouble.setText(null);
                    }
               
                }
           
        }
        }
        catch(NumberFormatException | SQLException SuD){
        }
    }//GEN-LAST:event_SuiDoubleMouseExited

    private void StdSingleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StdSingleKeyTyped
         if (!StdSingleRadio.isSelected()){
        
            JOptionPane.showMessageDialog(null,"Select the room first");
            StdSingle.setText(null);
            evt.consume();
        }   
        char t= evt.getKeyChar();
        if(!(Character.isDigit(t)|| t==KeyEvent.VK_BACKSPACE || t==KeyEvent.VK_DELETE || t==KeyEvent.VK_SPACE)){
        
           getToolkit().beep();
           evt.consume();
        }
    }//GEN-LAST:event_StdSingleKeyTyped

    private void StdDoubleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StdDoubleKeyTyped
    if (!StdDoubleRadio.isSelected()){
        
            JOptionPane.showMessageDialog(null,"Select the room first");
            StdDouble.setText(null);
            evt.consume();
        } 
        char t= evt.getKeyChar();
        if(!(Character.isDigit(t)|| t==KeyEvent.VK_BACKSPACE || t==KeyEvent.VK_DELETE || t==KeyEvent.VK_SPACE)){
        
           getToolkit().beep();
           evt.consume();
        }
    }//GEN-LAST:event_StdDoubleKeyTyped

    private void DelSingleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DelSingleKeyTyped
      
        if (!DelSingleRadio.isSelected()){
        
            JOptionPane.showMessageDialog(null,"Select the room first");
            DelSingle.setText(null);
            evt.consume();
        }
        char t= evt.getKeyChar();
        if(!(Character.isDigit(t)|| t==KeyEvent.VK_BACKSPACE || t==KeyEvent.VK_DELETE || t==KeyEvent.VK_SPACE)){
        
           getToolkit().beep();
           evt.consume();
        }
    }//GEN-LAST:event_DelSingleKeyTyped

    private void DelDoubleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DelDoubleKeyTyped
         if (!DelDoubleRadio.isSelected()){
        
            JOptionPane.showMessageDialog(null,"Select the room first");
            DelDouble.setText(null);
            evt.consume();
        }
        char t= evt.getKeyChar();
        if(!(Character.isDigit(t)|| t==KeyEvent.VK_BACKSPACE || t==KeyEvent.VK_DELETE || t==KeyEvent.VK_SPACE)){
        
           getToolkit().beep();
           evt.consume();
        }
    }//GEN-LAST:event_DelDoubleKeyTyped

    private void SuiSingleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SuiSingleKeyTyped
    if (!SuiSingleRadio.isSelected()){
        
            JOptionPane.showMessageDialog(null,"Select the room first");
            SuiSingle.setText(null);
            evt.consume();
        }   
        char t= evt.getKeyChar();
        if(!(Character.isDigit(t)|| t==KeyEvent.VK_BACKSPACE || t==KeyEvent.VK_DELETE || t==KeyEvent.VK_SPACE)){
        
           getToolkit().beep();
           evt.consume();
        }
    }//GEN-LAST:event_SuiSingleKeyTyped

    private void SuiDoubleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SuiDoubleKeyTyped
      if (!SuiDoubleRadio.isSelected()){
        
            JOptionPane.showMessageDialog(null,"Select the room first");
            SuiDouble.setText(null);
            evt.consume();
        }
        char t= evt.getKeyChar();
        if(!(Character.isDigit(t)|| t==KeyEvent.VK_BACKSPACE || t==KeyEvent.VK_DELETE || t==KeyEvent.VK_SPACE)){
        
           getToolkit().beep();
           evt.consume();
        }
    }//GEN-LAST:event_SuiDoubleKeyTyped

    private void StdSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StdSingleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StdSingleActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                
        String report=ireport.getText();
        String repSql = "SELECT\n"
                + "     resevationdetails.`CustomerName` AS resevationdetails_CustomerName,\n"
                + "     hotelrooms.`RoomName` AS hotelrooms_RoomName,\n"
                + "     hotelrooms.`Bed` AS hotelrooms_Bed\n"
                + "FROM\n"
                + "     `resevationdetails` resevationdetails INNER JOIN `reservedroom` reservedroom ON resevationdetails.`ReservationId` = reservedroom.`ReservationId`\n"
                + "     INNER JOIN `hotelrooms` hotelrooms ON reservedroom.`RoomId` = hotelrooms.`RoomId`\n"
                + "WHERE\n"
                + "hotelrooms.`RoomName`='" + report + "' ";

        try{
            
            JasperDesign jd=JRXmlLoader.load("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\hotel\\Rooms.jrxml");
            
            JRDesignQuery newQuery = new JRDesignQuery();  
            
            newQuery.setText(repSql);
            
            jd.setQuery(newQuery); 
            
            JasperReport jr = JasperCompileManager.compileReport(jd);  

            JasperPrint jp = JasperFillManager.fillReport(jr, null, con);

            System.out.println("9");
            JasperViewer.viewReport(jp, false);
            
            
            
        }
        catch(JRException e)
        {
             Logger.getLogger(Packages.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Room().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DelDouble;
    private javax.swing.JRadioButton DelDoubleRadio;
    private javax.swing.JTextField DelSingle;
    private javax.swing.JRadioButton DelSingleRadio;
    private javax.swing.JTextField StdDouble;
    private javax.swing.JRadioButton StdDoubleRadio;
    private javax.swing.JTextField StdSingle;
    private javax.swing.JRadioButton StdSingleRadio;
    private javax.swing.JTextField SuiDouble;
    private javax.swing.JRadioButton SuiDoubleRadio;
    private javax.swing.JTextField SuiSingle;
    private javax.swing.JRadioButton SuiSingleRadio;
    private javax.swing.JTextField ireport;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton next;
    // End of variables declaration//GEN-END:variables

}
